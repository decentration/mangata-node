name: Deploy mangata-node to `eigen-mococo`

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to be used for deployment"
        required: true
        type: string
  workflow_call:
    inputs:
      version:
        description: "Version to be used for deployment"
        required: true
        type: string

concurrency: eigen-mococo-environment

jobs:
  deploy-eigen-mococo:
    runs-on: ubuntu-latest
    environment: eigen-mococo
    env:
      GH_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
    steps:
      - name: Verify specified version exists
        run: docker pull mangatasolutions/mangata-node:${{ inputs.version }}
      
      - name: Checkout `mangata-finance/gitops` repository
        uses: actions/checkout@v3
        with:
          repository: mangata-finance/gitops
          # TODO: Has to be changed to main once everything will be checked
          ref: feat/deploy-eigen-layer-collators-env-MGX-878
          # ref: main
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Push updated version to `gitops` repository
        id: version
        run: |
          echo -n '${{ inputs.version }}' > helmfiles/eigen-mococo/.version
          git config user.name mangatafinance
          git config user.email solutions@mangata.finance
          git add .
          git commit -m 'chore: deploy ${{ inputs.version }} to eigen-mococo environment' || \
            echo "changed=false" >> $GITHUB_OUTPUT
          git push
      
      - name: Watch deployment workflow run
        run: |
          # Rerun previous workflow if version didn't change
          [ -n '${{ steps.version.outputs.changed }}' ] && gh run rerun $(gh run list -w deploy-eigen-mococo.yml -L1 --json databaseId --jq '.[].databaseId')
          
          sleep 5 && gh run list -L10 -w deploy-eigen-mococo.yml
          export RUN_ID=$(gh run list -w deploy-eigen-mococo.yml -L1 --json databaseId --jq '.[].databaseId')
          
          if [[ ($(gh run view "$RUN_ID" --json headSha --jq '.headSha') != $(git rev-parse HEAD)) && -z '${{ steps.version.outputs.changed }}' ]]; then
            echo "Commited git SHA doesn't match with the SHA of the retrieved Run ID"
            exit 1
          fi
          
          echo "Deployed version: ${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "Deployment workflow URL: $(gh run view "$RUN_ID" --json url --jq '.url')" >> $GITHUB_STEP_SUMMARY
          gh run watch "$RUN_ID" --exit-status